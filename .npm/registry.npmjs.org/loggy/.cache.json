{"_id":"loggy","_rev":"5-b7c2a8780ecc34abc2c62c8f3c634855","name":"loggy","description":"Dead-simple colored logger for stdout.","dist-tags":{"latest":"0.2.0"},"versions":{"0.1.0":{"name":"loggy","version":"0.1.0","description":"Dead-simple colored logger for stdout.","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/paulmillr/loggy"},"keywords":["log","logger","tasty","simple"],"author":{"name":"Paul Miller","url":"paulmillr.com"},"license":"MIT","dependencies":{"ansi-color":"~0.2.1","growl":"~1.7.0","date-utils":"~1.2.12"},"readme":"# loggy\n\nColorful stdstream dead-simple logger for node.js.\n\n* Logs stuff to stdout (`log`, `info`, `success`).\n* Logs errors & warnings to stderr (`warn`, `error`).\n* Adds colors to log types (e.g. `warn`, `info` words will be colored).\n* Creates OS X / growl / libnotify notifications for errors.\n* Tracks whether any error was logged (useful for changing process exit code).\n\n![](http://f.cl.ly/items/3i260B2i1M1S1d0Q2b0r/Screen%20Shot%202013-02-27%20at%2012.57.02%20PM.png)\n\nInstall with `npm install loggy`.\n\n## Usage\n\nExample:\n\n```javascript\nvar logger = require('loggy');\n\n// Logs “27 Feb 09:08:34 - info: Hello, loggy to stdout.\n// “info” word is green.\nlogger.info('Hello', 'loggy');\n\n// Logs “27 Feb 09:08:40 - warn: Deprecated to stderr. “warn” word is yellow.\nlogger.warn('Deprecated');\n\n// Logs “27 Feb 09:08:40 - error: Stuff” to stderr.\n// Creates growl / OS X / libnotify notification “Stuff”.\n// “error” word is red.\nlogger.error('Stuff');\n\n// Exit with proper code.\nprocess.on('exit', function() {\n   process.exit(logger.errorHappened ? 1 : 0);\n});\n\n// Disable colors.\nlogger.colors = false;\n\n// Disable system notifications.\nlogger.notifications = false;\n```\n\nMethods:\n\n* `logger.error(...args)` - logs messages in red to stderr, creates notification\n* `logger.warn(...args)` - logs messages in yellow to stdout\n* `logger.log(...args)`, `logger.info`, `logger.success` -\n  logs messages in green to stdout.\n* `logger.format(level[, entryFormat = logger.entryFormat])` - function that does color and date formatting.\n\nParams:\n\n* `logger.colors` - mapping of log levels to colors.\n  Can be object, like `{error: 'red', log: 'green'}` or `false`\n  (disables colors).\n* `logger.errorHappened` - `false`, changes to `true` if any error was logged.\n* `logger.entryFormat` - String, format of date in logs. Default is `DD MMM HH24:MI:SS`\n* `logger.notifications` - Boolean, enables or disables notifications for errors.\n\nTo create your own logger, simply clone the logger object.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Paul Miller (http://paulmillr.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","readmeFilename":"README.md","_id":"loggy@0.1.0","dist":{"shasum":"89a418bedbd511972d15c53f5dd5c92a4d3c2f83","tarball":"http://registry.npmjs.org/loggy/-/loggy-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"directories":{}},"0.2.0":{"name":"loggy","version":"0.2.0","description":"Dead-simple colored logger for stdout.","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/paulmillr/loggy"},"keywords":["log","logger","tasty","simple"],"author":{"name":"Paul Miller","url":"paulmillr.com"},"license":"MIT","dependencies":{"ansi-color":"~0.2.1","growl":"~1.7.0","date-utils":"~1.2.12"},"readme":"# loggy\n\nColorful stdstream dead-simple logger for node.js.\n\n* Logs stuff to stdout (`log`, `info`, `success`).\n* Logs errors & warnings to stderr (`warn`, `error`).\n* Adds colors to log types (e.g. `warn`, `info` words will be colored).\n* Creates OS X / growl / libnotify notifications for errors.\n* Tracks whether any error was logged (useful for changing process exit code).\n\n![Screen Shot 2013-04-21 at 03 26 41](https://f.cloud.github.com/assets/574696/405855/2fe7271e-aa1a-11e2-8b85-347e71ac49f9.png)\n\n\nInstall with `npm install loggy`.\n\n## Usage\n\nExample:\n\n```javascript\nvar logger = require('loggy');\n\n// Logs “27 Feb 09:08:34 - info: Hello, loggy to stdout.\n// “info” word is green.\nlogger.info('Hello', 'loggy');\n\n// Logs “27 Feb 09:08:40 - warn: Deprecated to stderr. “warn” word is yellow.\nlogger.warn('Deprecated');\n\n// Logs “27 Feb 09:08:40 - error: Stuff” to stderr.\n// Creates growl / OS X / libnotify notification “Stuff”.\n// “error” word is red.\nlogger.error('Stuff');\n\n// Exit with proper code.\nprocess.on('exit', function() {\n   process.exit(logger.errorHappened ? 1 : 0);\n});\n\n// Disable colors.\nlogger.colors = false;\n\n// Disable system notifications.\nlogger.notifications = false;\n\n// Enable notifications for more methods\nlogger.notifications = ['error', 'warn', 'success'];\n\n// Prepend the notifications title\nlogger.notificationsTitle = 'My App'\n```\n\nMethods:\n\n* `logger.error(...args)` - logs messages in red to stderr, creates notification\n* `logger.warn(...args)` - logs messages in yellow to stdout\n* `logger.log(...args)`, `logger.info`, `logger.success` -\n  logs messages in green to stdout.\n* `logger.format(level[, entryFormat = logger.entryFormat])` - function that does color and date formatting.\n\nParams:\n\n* `logger.colors` - mapping of log levels to colors.\n  Can be object, like `{error: 'red', log: 'green'}` or `false`\n  (disables colors).\n* `logger.errorHappened` - `false`, changes to `true` if any error was logged.\n* `logger.entryFormat` - String, format of date in logs. Default is `DD MMM HH24:MI:SS`\n* `logger.notifications` - As Boolean, enables or disables notifications for errors, or \n  as Array, list types to trigger notifications, like `['error', 'warn', 'success']`.\n* `logger.notificationsTitle` - String, optional, prepends title in notifications.\n\nTo create your own logger, simply clone the logger object.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Paul Miller (http://paulmillr.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","readmeFilename":"README.md","_id":"loggy@0.2.0","dist":{"shasum":"170dffc8051ef979028cf61af5669d9da1af3821","tarball":"http://registry.npmjs.org/loggy/-/loggy-0.2.0.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"directories":{}}},"readme":"# loggy\n\nColorful stdstream dead-simple logger for node.js.\n\n* Logs stuff to stdout (`log`, `info`, `success`).\n* Logs errors & warnings to stderr (`warn`, `error`).\n* Adds colors to log types (e.g. `warn`, `info` words will be colored).\n* Creates OS X / growl / libnotify notifications for errors.\n* Tracks whether any error was logged (useful for changing process exit code).\n\n![](http://f.cl.ly/items/3i260B2i1M1S1d0Q2b0r/Screen%20Shot%202013-02-27%20at%2012.57.02%20PM.png)\n\nInstall with `npm install loggy`.\n\n## Usage\n\nExample:\n\n```javascript\nvar logger = require('loggy');\n\n// Logs “27 Feb 09:08:34 - info: Hello, loggy to stdout.\n// “info” word is green.\nlogger.info('Hello', 'loggy');\n\n// Logs “27 Feb 09:08:40 - warn: Deprecated to stderr. “warn” word is yellow.\nlogger.warn('Deprecated');\n\n// Logs “27 Feb 09:08:40 - error: Stuff” to stderr.\n// Creates growl / OS X / libnotify notification “Stuff”.\n// “error” word is red.\nlogger.error('Stuff');\n\n// Exit with proper code.\nprocess.on('exit', function() {\n   process.exit(logger.errorHappened ? 1 : 0);\n});\n\n// Disable colors.\nlogger.colors = false;\n\n// Disable system notifications.\nlogger.notifications = false;\n```\n\nMethods:\n\n* `logger.error(...args)` - logs messages in red to stderr, creates notification\n* `logger.warn(...args)` - logs messages in yellow to stdout\n* `logger.log(...args)`, `logger.info`, `logger.success` -\n  logs messages in green to stdout.\n* `logger.format(level[, entryFormat = logger.entryFormat])` - function that does color and date formatting.\n\nParams:\n\n* `logger.colors` - mapping of log levels to colors.\n  Can be object, like `{error: 'red', log: 'green'}` or `false`\n  (disables colors).\n* `logger.errorHappened` - `false`, changes to `true` if any error was logged.\n* `logger.entryFormat` - String, format of date in logs. Default is `DD MMM HH24:MI:SS`\n* `logger.notifications` - Boolean, enables or disables notifications for errors.\n\nTo create your own logger, simply clone the logger object.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Paul Miller (http://paulmillr.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"time":{"modified":"2013-05-12T00:00:41.900Z","created":"2013-02-27T11:13:35.763Z","0.1.0":"2013-02-27T11:13:38.075Z","0.2.0":"2013-05-12T00:00:41.900Z"},"author":{"name":"Paul Miller","url":"paulmillr.com"},"repository":{"type":"git","url":"https://github.com/paulmillr/loggy"},"_attachments":{},"_etag":"\"3J2SPD7YFO3I8LLM6ZP695N9X\""}